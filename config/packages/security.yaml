security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_SUPPORTER
        ROLE_SUPPORTER: ROLE_DEFAULT

    access_control:
        - { path: /gp, role: ROLE_DEFAULT }
        - { path: ^/server, role: ROLE_DEFAULT }
        - { path: ^/support, role: ROLE_DEFAULT }
        - { path: ^/backend, role: ROLE_SUPPORTER }
        - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }

    encoders:
        GSS\Component\Security\User:
            algorithm: bcrypt

    providers:
        login:
            id: security.user_provider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api
            user_checker: GSS\Component\Security\UserChecker
            json_login:
                check_path:               /api/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
            guard:
                authenticators:
                  - lexik_jwt_authentication.security.guard.jwt_token_authenticator

        main:
            anonymous:    true
            user_checker: GSS\Component\Security\UserChecker
            remember_me:
                secret:   '%secret%'
                lifetime: 604800
                path:     /
            form_login:
                login_path: index
                check_path: login

            logout:
                path: /user/logout
                target: /
                invalidate_session: true
            guard:
                authenticators:
                    - security.login_auth